services:
  transactions-db:
    build:
      context: ./docker/postgres-db
    environment:
      - POSTGRES_USER=finance_db_user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=finance_db
    volumes:
        - "postgres-data:/var/lib/postgresql/data"
        - "${PWD}/db-scripts/initialize_db_ddl.sql:/docker-entrypoint-initdb.d/initialize_db_ddl.sql"
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "wal_level=logical", "-c", "hot_standby=on"]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    depends_on: [kafka]
    ports: ["8081:8081"]
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  connect:
    image: debezium/connect:2.3
    depends_on: [kafka, schema-registry, transactions-db]
    ports: ["8083:8083"]
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-cluster
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.SchemaRegistryConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.SchemaRegistryConverter
      CONNECT_SCHEMA_REGISTRY_URL: http://schema-registry:8081

volumes:
  postgres-data:
